function getSearchType(){
    return($('#searchsim').html());
}

function searchType(t){
    $('#searchsim').html(t);
}

function submitSearch(){
    var query = generateQuery();
    if(query != null){
	$.ajax({
	    url: '/query',
	    type: 'POST',
	    contentType: 'application/json',
	    data: JSON.stringify(query),
	    success: function(data){
		window.location.href = "/wait/" + data.queryId;
	    },
	    error: function(data){
		console.log("Error on submit: " + data);
	    }
	});
    }
}

function generateQuery(){
    var settings = genSearchSettings();
    var text = $('#proginput').val();
    return({ queryText: text
	   , queryLanguage: 'java'
	   , queryId: null
	   , querySettings: settings
	   })
}

// Generate standard search settings based on the input from the selector
function genSearchSettings(){
    var searchType = getSearchType();
    switch(searchType){
    case "High Similarity":
	return({ minMatchLength: 50
	       , levenshteinDistance: 0
	       , coveragePercentage: 0.75
	       , blockFiltering: true
	       , semanticThreshold: 0.6
	       });
    case "Medium Similarity":
	return({ minMatchLength: 30
	       , levenshteinDistance: 0
	       , coveragePercentage: 0.75
	       , blockFiltering: true
	       , semanticThreshold: 0.25
	       });
    case "Low Similarity":
	return({ minMatchLength: 25
	       , levenshteinDistance: 1
	       , coveragePercentage: 0.30
	       , blockFiltering: true
	       , semanticThreshold: null
	       });
    default:
	alert("Unrecognized search settings: " + searchType);
	return null;
    }
}


/*document.getElementById(#{toJSON aDomId}).innerHTML = "This text was added by the Javascript part of the homepage widget.";

$(function() {
  $("##{rawJS commentFormId}").submit(function(event) {
    event.preventDefault();

    var message = $("##{rawJS commentTextareaId}").val();
    // (Browsers that enforce the "required" attribute on the textarea won't see this alert)
    if (!message) {
      alert("Please fill out the comment form first.");
      return;
    }

    // Make an AJAX request to the server to create a new comment
    $.ajax({
      url: '@{CommentR}',
      type: 'POST',
      contentType: "application/json",
      data: JSON.stringify({
        message: message,
      }),
      success: function (data) {
        var newNode = $("<li></li>");
        newNode.text(data.message);
        $("##{rawJS commentListId}").append(newNode);
      },
      error: function (data) {
        console.log("Error creating comment: " + data);
      },
    });

  });
});
*/
